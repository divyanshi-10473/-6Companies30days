class Solution {
public:
     vector<int> maxSubsequence(vector<int>& nums, int k) {
       
        priority_queue<pair<int,int>, vector<pair<int,int>> , greater<pair<int,int>>> pq;
        for (int i = 0; i < nums.size(); i++) {
            pq.push({nums[i], i});
            if (pq.size() > k) {
                pq.pop(); 
            }
        }
        map<int, int> mpp; 
        while (!pq.empty()) {
            mpp.insert({pq.top().second, pq.top().first});
            pq.pop();
        }
        vector<int> ans; // 
        for (auto& maps : mpp) {
            ans.push_back(maps.second);
        }
        return ans;
    }
};
