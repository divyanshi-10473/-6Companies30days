class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int dt) {
        vector<vector<int>> cost(n, vector<int>(n, INT_MAX));
  
        for (int i = 0; i < n; i++) {
            cost[i][i] = 0;
        }
        
        for (auto& edge : edges) {
            cost[edge[0]][edge[1]] = edge[2];
            cost[edge[1]][edge[0]] = edge[2];
        }
        
        for (int via = 0; via < n; via++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (cost[i][via] != INT_MAX && cost[via][j] != INT_MAX) {
                        cost[i][j] = min(cost[i][j], cost[i][via] + cost[via][j]);
                    }
                }
            }
        }
        
        int cntMin = INT_MAX;
        int ans = -1;
        for (int i = 0; i < n; i++) {
            int count = 0;
            for (int j = 0; j < n; j++) {
                if (i != j && cost[i][j] <= dt) {
                    count++;
                }
            }
            if (count < cntMin || (count == cntMin && i > ans)) {
                cntMin = count;
                ans = i;
            }
        }
        
        return ans;
    }
};
